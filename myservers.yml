Description: >
    Joshua / Udacity project 2
Parameters:
  EnvironmentName:
      Description: Single Parameter that we are passing with the env name.
      Type: String
  ServerImage:
      Description: The image id for the server.
      Type: String
  ServerVolume:
      Description: The server disk size
      Type: String
  MaxiSize:
    Description: Autoscaling maximum size
    Type: String
  MiniSize:
    Description: Autoscaling minimum size
    Type: String

Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow hhtp to Load Balanacer
      VpcId: 
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
      GroupName: Security Group for Load Balancer
      SecurityGroupEgress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
   

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow http / SSH only from local VPC
      VpcId: 
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
      GroupName: Security Group for WebServer internal traffic
      SecurityGroupEgress:  
        - CidrIp: 0.0.0.0/0
          FromPort: 0
          ToPort: 65535
          IpProtocol: tcp
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp


  UdacityS3ReadOnlyEC2:
    Type: AWS::IAM::Role
    Properties:
      RoleName: UdacityS3ReadOnlyEC2
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: '/'
      Policies:
        - PolicyName: "S3ReadOnlyAccess"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:Get*"
                Resource: "*"
      
  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - !Ref UdacityS3ReadOnlyEC2

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          sudo apt update -y
          sudo apt install -y apache2
          sudo apt-get install zip -y
          sudo systemctl start apache2
          sudo systemctl enable apache2
          sudo rm /var/www/html/index.html
          sudo wget -P /var/www/html https://udagrambucket1.s3-us-east-1.amazonaws.com/index.html
         
      ImageId: !Ref ServerImage  # Ubuntu Server 18.04 LTS (HVM), SSD Volume Type
      SecurityGroups:
       - Ref: WebServerSecGroup
      InstanceType: t2.medium  # 2vCPUs 4GB RAM
      BlockDeviceMappings:
       - DeviceName: "/dev/sdk" 
         Ebs:
           VolumeSize: !Ref ServerVolume
           
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: !Ref MiniSize
      MaxSize: !Ref MaxiSize
      TargetGroupARNs:
        - Ref: WebAppTargetGroup


  WebAppLB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
        - Ref: LBSecGroup

  Listener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: "80"
      Protocol: HTTP

  ALBListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref "WebAppTargetGroup"
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref "Listener"
      Priority: 1

  WebAppTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"

Outputs:

  WebSiteAddress:
    Description: Loadbalancer endpoint
    Value: !Join [ '', [ 'http://', !GetAtt WebAppLB.DNSName ] ]
    Export:
      Name: !Sub ${EnvironmentName}-DNSName
